{"version":3,"sources":["ButtonComponent.tsx","DisplayComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonComponent","props","className","status","onClick","start","pause","reset","resume","DisplayComponent","time","h","m","s","App","useState","setTime","spacing","setSpacing","setStatus","run","setInterval","updateS","updateM","updateH","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAUQ,SAASA,EAAgBC,GAE7B,OACI,sBAAKC,UAAU,UAAf,UACqB,IAAfD,EAAME,OAAc,wBAAQD,UAAU,oCAAoCE,QAASH,EAAMI,MAArE,mBAA6F,GAClG,IAAfJ,EAAME,OACJ,gCACI,wBAAQD,UAAU,oCAAoCE,QAASH,EAAMK,MAArE,mBAA0F,wBAAQJ,UAAU,oCAAoCE,QAASH,EAAMM,MAArE,sBAAmG,GACpL,IAAfN,EAAME,OACJ,gCACI,wBAAQD,UAAU,oCAAoCE,QAASH,EAAMO,OAArE,oBAA4F,wBAAQN,UAAU,oCAAoCE,QAASH,EAAMM,MAArE,sBAAmG,MCd5M,SAASE,EAAiBR,GAC7B,OACI,gCACI,+BAAQA,EAAMS,KAAKC,GAAG,GAAMV,EAAMS,KAAKC,EAAI,IAAMV,EAAMS,KAAKC,IADhE,IAGI,+BAAQV,EAAMS,KAAKE,GAAG,GAAMX,EAAMS,KAAKE,EAAG,IAAMX,EAAMS,KAAKE,IAH/D,IAKI,+BAAQX,EAAMS,KAAKG,GAAG,GAAMZ,EAAMS,KAAKG,EAAI,IAAMZ,EAAMS,KAAKG,OCwDzDC,MAxDf,WAAgB,IAAD,EACaC,mBAAmB,CACnCF,EAAG,EACHD,EAAG,EACHD,EAAG,IAJA,mBACJD,EADI,KACEM,EADF,OAOmBD,mBAAyB,IAP5C,mBAOJE,EAPI,KAOKC,EAPL,OAQiBH,mBAAoB,GARrC,mBAQJZ,EARI,KAQIgB,EARJ,KAULd,EAAQ,WACVe,IACAD,EAAU,GACVD,EAAWG,YAAYD,EAAK,OAI5BE,EAAUZ,EAAKG,EAAGU,EAAUb,EAAKE,EAAGY,EAAUd,EAAKC,EAEjDS,EAAM,WAUR,OATgB,KAAZG,IACAC,IACAD,EAAU,GAEE,KAAZD,IACAC,IACAD,EAAU,GAEdA,IACON,EAAQ,CAACH,EAAGS,EAASV,EAAGW,EAASZ,EAAGa,KAe/C,OACI,qBAAKtB,UAAU,eAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAACO,EAAD,CAAkBC,KAAMA,IACxB,cAACV,EAAD,CAAiBG,OAAQA,EAAQK,OANlC,kBAAMH,KAM4CE,MAZnD,WACVkB,cAAcR,GACdE,EAAU,GACVH,EAAQ,CAACH,EAAG,EAAGD,EAAG,EAAGD,EAAG,KASmDL,MAjBjE,WACVmB,cAAcR,GACdE,EAAU,IAe+Ed,MAAOA,YChDzFqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e609704c.chunk.js","sourcesContent":["import React from \"react\";\n\ntype PropsType = {\n    status: number\n    resume: () => void\n    reset: () => void\n    pause:() => void\n    start:() => void\n}\n\n export function ButtonComponent(props: PropsType){\n\n    return(\n        <div className=\"btn-box\">\n            {(props.status===0) ? <button className=\"stopwatch-btn stopwatch-btn-black\" onClick={props.start}>Start</button> : \"\"}\n            {(props.status===1) ?\n                <div>\n                    <button className=\"stopwatch-btn stopwatch-btn-black\" onClick={props.pause}>Pause</button><button className=\"stopwatch-btn stopwatch-btn-black\" onClick={props.reset}>Reset</button></div> : \"\"}\n            {(props.status===2)?\n                <div>\n                    <button className=\"stopwatch-btn stopwatch-btn-black\" onClick={props.resume}>Resume</button><button className=\"stopwatch-btn stopwatch-btn-black\" onClick={props.reset}>Reset</button></div> : \"\"}\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport {TimeType} from \"./App\";\n\ntype PropsType = {\n    time: TimeType\n}\nexport function DisplayComponent(props: PropsType){\n    return(\n        <div>\n            <span>{(props.time.h>=10) ? props.time.h : \"0\" + props.time.h}</span>\n            :\n            <span>{(props.time.m>=10) ? props.time.m: \"0\" + props.time.m}</span>\n            :\n            <span>{(props.time.s>=10) ? props.time.s : \"0\" + props.time.s}</span>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport {ButtonComponent} from \"./ButtonComponent\";\nimport {DisplayComponent} from \"./DisplayComponent\";\n\n\n\nexport type TimeType = {\n    s: number\n    m: number\n    h: number\n}\n\nfunction App() {\n    const [time, setTime] = useState<TimeType>({\n            s: 0,\n            m: 0,\n            h: 0\n        }\n    );\n    const [spacing, setSpacing] = useState<NodeJS.Timeout>({} as NodeJS.Timeout);    //<NodeJS.Timeout>({} as NodeJS.Timeout);\n    const [status, setStatus] = useState<0 | 1 | 2>(0);\n\n    const start = () => {\n        run();\n        setStatus(1);\n        setSpacing(setInterval(run, 1000))\n\n    }\n\n    let updateS = time.s, updateM = time.m, updateH = time.h;\n\n    const run = () => {\n        if (updateM === 60) {\n            updateH++;\n            updateM = 0;\n        }\n        if (updateS === 60) {\n            updateM++;\n            updateS = 0;\n        }\n        updateS++;\n        return setTime({s: updateS, m: updateM, h: updateH});\n    };\n\n    const pause = () => {\n        clearInterval(spacing);\n        setStatus(2);\n    }\n\n    const reset = () => {\n        clearInterval(spacing);\n        setStatus(0);\n        setTime({s: 0, m: 0, h: 0});\n    }\n\n    const resume = () => start();\n    return (\n        <div className=\"main-section\">\n            <div className=\"clock-holder\">\n                <div className=\"stopwatch\">\n                    <DisplayComponent time={time}/>\n                    <ButtonComponent status={status} resume={resume} reset={reset} pause={pause} start={start}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}